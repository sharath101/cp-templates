#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define pb push_back
#define mp make_pair
#define deb(x) cout<< #x << " " << x << "\n";
const ll mod=1e9+7;

vector<ll> a;
ll st[1000000];

void buildtree(ll i,ll s,ll e){
    if(s==e){
        st[i]=a[s];
        return;
    }
    ll mid=(s+e)/2;
    buildtree(2*i+1,s,mid);
    buildtree(2*i+2,mid+1,e);
    st[i]=min(st[2*i+1],st[2*i+2]);
}

ll query(ll i,ll s,ll e,ll qs,ll qe){
    if(qe<s || qs>e)
        return LONG_MAX;
    if(s>=qs && e<=qe)
        return st[i];
    ll mid=(s+e)/2;
    ll l=query(2*i+1,s,mid,qs,qe);
    ll r=query(2*i+2,mid+1,e,qs,qe);
    return min(l,r);
}

void update(ll i,ll s,ll e,ll qi){
    if(s==e){
        st[i]=a[s];
        return;
    }
    ll mid=(s+e)/2;
    if(qi<=mid) update(2*i+1,s,mid,qi);
    else        update(2*i+2,mid+1,e,qi);
    st[i]=min(st[2*i+1],st[2*i+2]);
}

int main() {
    
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    ll n,k,q;
    cin>>n;
    for(ll i=0;i<n;i++)
        cin>>k,a.pb(k);
    buildtree(0,0,n-1);
    cin>>q;
    ll l,r;
    while(q--){
        cin>>l>>r;
        cout<<query(0,0,n-1,l,r)<<"\n";
    }

    return 0;
}

