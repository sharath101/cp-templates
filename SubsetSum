#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define pb push_back
#define mp make_pair
#define deb(x) cout<< #x << " " << x << "\n";
#define INF 9223372036854775807
#define setbits(n) __builtin_popcountll(n)
const int mod=1e9+7;

bool subsetsum(vector<ll> set, ll sum){ 
    ll n=set.size();
    bool dp[n+1][sum+1]; 
    for (ll i=0;i<=n;i++) 
        dp[i][0]=true; 
    for (ll i=1;i<=sum;i++) 
        dp[0][i]=false; 
    for (ll i=1;i<=n;i++) { 
        for (ll j=1;j<=sum;j++) { 
            if (j<set[i-1]) 
                dp[i][j] = dp[i-1][j]; 
            if (j>=set[i-1]) 
                dp[i][j]=dp[i-1][j] || dp[i-1][j-set[i-1]]; 
        } 
    }
    return dp[n][sum]; 
}

 
int main() {
    
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    ll n=20;
    vector<ll> a={5,11,2,7,19,15};
    if(subsetsum(a,n))
        cout<<"There is a subset with sum "<<n;
    else
        cout<<"There is no subset with sum "<<n;

    return 0;
}
